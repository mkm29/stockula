---
# Docker Compose configuration for Stockula with GPU support
# Extends the main docker-compose.yml with GPU-accelerated services
services:
  # GPU-accelerated Stockula development environment
  stockula-gpu-dev:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.nvidia
      target: gpu-development
      args:
        CUDA_VERSION: "12.4"
    container_name: stockula-gpu-dev
    volumes:
      - ../..:/app
      - stockula-data:/app/data
      - stockula-results:/app/results
    ports:
      - "8890:8888"  # Jupyter Lab on different port
    environment:
      - PYTHONPATH=/app/src
      - STOCKULA_ENV=development
      - CUDA_VISIBLE_DEVICES=0
      - DATABASE_URL=postgresql://stockula:${POSTGRES_PASSWORD:-SuperSecret12}@timescaledb:5432/stockula
      - REDIS_URL=redis://redis:6379/0
    command: ["uv", "run", "jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]
    depends_on:
      timescaledb:
        condition: service_healthy
        required: false
      redis:
        condition: service_healthy
        required: false
    networks:
      - stockula-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - gpu
      - gpu-dev

  # GPU-accelerated forecasting service
  stockula-gpu-forecast:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.nvidia
      target: gpu-production
      args:
        CUDA_VERSION: "12.4"
    container_name: stockula-gpu-forecast
    volumes:
      - stockula_data:/app/data
      - stockula_results:/app/results
      - ../../examples:/app/examples:ro
    environment:
      - PYTHONPATH=/app/src
      - STOCKULA_ENV=production
      - CUDA_VISIBLE_DEVICES=0
      - DATABASE_URL=postgresql://stockula:${POSTGRES_PASSWORD:-SuperSecret12}@pgbouncer:5432/stockula
      - REDIS_URL=redis://redis:6379/0
      - TIMESCALEDB_HOST=timescaledb
      - TIMESCALEDB_PORT=5432
      - TIMESCALEDB_DATABASE=stockula
      - TIMESCALEDB_USER=stockula
      - TIMESCALEDB_PASSWORD=${POSTGRES_PASSWORD:-SuperSecret12}
    depends_on:
      timescaledb:
        condition: service_healthy
      pgbouncer:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - stockula-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - gpu
      - gpu-forecast

# Uses the same volumes and networks from main docker-compose.yml
# Note: Volumes and networks are inherited from main docker-compose.yml when using both files
